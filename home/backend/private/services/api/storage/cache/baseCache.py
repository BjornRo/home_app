from typing import Any, Protocol


class BaseCache(Protocol):
    async def get(self, key: str) -> bytes | None: ...
    async def get_many(self, *keys: str) -> tuple[bytes | None, ...]: ...
    async def get_many_dict(self, *keys: str) -> dict[str, bytes]: ...
    async def set(self, key: str, value: bytes, ttl: int | None = None) -> bool: ...
    async def exists(self, key: str) -> bool: ...
    async def exists_many(self, *key: str) -> int: ...
    async def keys(self, pattern: str) -> list[bytes]: ...
    async def incr(self, key: str) -> int: ...
    async def incr_ex(self, key: str, ttl: int | None = None) -> int: ...
    async def expire(self, key: str, ttl: int) -> bool: ...
    async def delete(self, key: str) -> bool: ...
    async def clear(self) -> bool:
        raise NotImplemented

    async def close(self): ...

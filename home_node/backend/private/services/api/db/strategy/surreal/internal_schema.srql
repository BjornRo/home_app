##############
### Tables ###
##############

DEFINE TABLE user SCHEMAFULL;
    DEFINE FIELD enabled ON TABLE user TYPE bool;

    DEFINE FIELD login ON TABLE user TYPE object;
    DEFINE FIELD login.name ON TABLE user TYPE string;
    DEFINE FIELD login.pwd ON TABLE user TYPE string;

    DEFINE FIELD registration ON TABLE user TYPE object;
    DEFINE FIELD registration.created_by ON TABLE user TYPE record;
    DEFINE FIELD registration.created ON TABLE user TYPE datetime;

# Store as user_role:{id: user:id, name: "admin"}, given_by points to id in another db
DEFINE TABLE user_role SCHEMAFULL;
    DEFINE FIELD date ON TABLE user_role TYPE datetime VALUE time::now();
    DEFINE FIELD given_by ON TABLE user_role TYPE record;

# Store as token_valid_from:user:id
DEFINE TABLE token_valid_from SCHEMAFULL;
    DEFINE FIELD unixtime ON TABLE token_valid_from TYPE number;

#############
### EVENT ###
#############

DEFINE EVENT del_user ON TABLE user WHEN ($after == NONE) THEN {
    DELETE user_role WHERE id.id == $before.id;
    DELETE token_valid_from WHERE id == $before.id;
};


###############
### Indices ###
###############

DEFINE INDEX user_name_index ON TABLE user COLUMNS login.name UNIQUE;

#################
### Functions ###
#################

DEFINE FUNCTION fn::tab_str($table: string, $user_id: string) {
    RETURN type::thing($table, $user_id)
};

DEFINE FUNCTION fn::tab_rec($table: string, $rec_id: record) {
    RETURN type::thing($table, meta::id($rec_id))
};
